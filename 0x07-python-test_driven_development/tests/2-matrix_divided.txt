Import the method
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test Cases
>>> matrix = [
...	[1, 2, 3],
...	[4, 5, 6]
... ]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test missing one argument
>>> matrix_divided(matrix)
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

Test missing two arguments
>>> matrix_divided()
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

With one value as string
>>> matrix = [
...     [1, 'b', 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

With div being not a number or float
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 'b')
Traceback (most recent call last):
	...
TypeError: div must be a number

Zero division error
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero

Test float infinity as divider
>>> matrix_divided(matrix, float("inf"))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> matrix[0][2] = float("nan")
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, nan], [1.33, 1.67, 2.0]]

>>> matrix_divided(matrix, float("inf"))
[[0.0, 0.0, nan], [0.0, 0.0, 0.0]]

Test matrix list not the same size
>>> matrix = [
...     [1, 2, 3],
...     [4, 5]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size
